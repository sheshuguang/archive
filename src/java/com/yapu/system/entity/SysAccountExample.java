package com.yapu.system.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SysAccountExample {
    
    protected String orderByClause;
    protected Integer pageSize;
    protected Integer startRow;
    protected List oredCriteria;
    
    public SysAccountExample() {
        oredCriteria = new ArrayList();
    }
    protected SysAccountExample(SysAccountExample example) {
        this.orderByClause = example.orderByClause;
        this.pageSize = example.pageSize;
        this.startRow = example.startRow;
        this.oredCriteria = example.oredCriteria;
    }
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }
    public String getOrderByClause() {
        return orderByClause;
    }
    public Integer getPageSize() {
		return pageSize;
	}
	public void setPageSize(Integer pageSize) {
		this.pageSize = pageSize;
	}
	public Integer getStartRow() {
		return startRow;
	}
	public void setStartRow(Integer startRow) {
		this.startRow = startRow;
	}
	public List getOredCriteria() {
        return oredCriteria;
    }
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table SYS_ACCOUNT
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andAccountidIsNull() {
            addCriterion("ACCOUNTID is null");
            return this;
        }

        public Criteria andAccountidIsNotNull() {
            addCriterion("ACCOUNTID is not null");
            return this;
        }

        public Criteria andAccountidEqualTo(String value) {
            addCriterion("ACCOUNTID =", value, "accountid");
            return this;
        }

        public Criteria andAccountidNotEqualTo(String value) {
            addCriterion("ACCOUNTID <>", value, "accountid");
            return this;
        }

        public Criteria andAccountidGreaterThan(String value) {
            addCriterion("ACCOUNTID >", value, "accountid");
            return this;
        }

        public Criteria andAccountidGreaterThanOrEqualTo(String value) {
            addCriterion("ACCOUNTID >=", value, "accountid");
            return this;
        }

        public Criteria andAccountidLessThan(String value) {
            addCriterion("ACCOUNTID <", value, "accountid");
            return this;
        }

        public Criteria andAccountidLessThanOrEqualTo(String value) {
            addCriterion("ACCOUNTID <=", value, "accountid");
            return this;
        }

        public Criteria andAccountidLike(String value) {
            addCriterion("ACCOUNTID like", value, "accountid");
            return this;
        }

        public Criteria andAccountidNotLike(String value) {
            addCriterion("ACCOUNTID not like", value, "accountid");
            return this;
        }

        public Criteria andAccountidIn(List values) {
            addCriterion("ACCOUNTID in", values, "accountid");
            return this;
        }

        public Criteria andAccountidNotIn(List values) {
            addCriterion("ACCOUNTID not in", values, "accountid");
            return this;
        }

        public Criteria andAccountidBetween(String value1, String value2) {
            addCriterion("ACCOUNTID between", value1, value2, "accountid");
            return this;
        }

        public Criteria andAccountidNotBetween(String value1, String value2) {
            addCriterion("ACCOUNTID not between", value1, value2, "accountid");
            return this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("USERID is null");
            return this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("USERID is not null");
            return this;
        }

        public Criteria andUseridEqualTo(String value) {
            addCriterion("USERID =", value, "userid");
            return this;
        }

        public Criteria andUseridNotEqualTo(String value) {
            addCriterion("USERID <>", value, "userid");
            return this;
        }

        public Criteria andUseridGreaterThan(String value) {
            addCriterion("USERID >", value, "userid");
            return this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(String value) {
            addCriterion("USERID >=", value, "userid");
            return this;
        }

        public Criteria andUseridLessThan(String value) {
            addCriterion("USERID <", value, "userid");
            return this;
        }

        public Criteria andUseridLessThanOrEqualTo(String value) {
            addCriterion("USERID <=", value, "userid");
            return this;
        }

        public Criteria andUseridLike(String value) {
            addCriterion("USERID like", value, "userid");
            return this;
        }

        public Criteria andUseridNotLike(String value) {
            addCriterion("USERID not like", value, "userid");
            return this;
        }

        public Criteria andUseridIn(List values) {
            addCriterion("USERID in", values, "userid");
            return this;
        }

        public Criteria andUseridNotIn(List values) {
            addCriterion("USERID not in", values, "userid");
            return this;
        }

        public Criteria andUseridBetween(String value1, String value2) {
            addCriterion("USERID between", value1, value2, "userid");
            return this;
        }

        public Criteria andUseridNotBetween(String value1, String value2) {
            addCriterion("USERID not between", value1, value2, "userid");
            return this;
        }

        public Criteria andAccountcodeIsNull() {
            addCriterion("ACCOUNTCODE is null");
            return this;
        }

        public Criteria andAccountcodeIsNotNull() {
            addCriterion("ACCOUNTCODE is not null");
            return this;
        }

        public Criteria andAccountcodeEqualTo(String value) {
            addCriterion("ACCOUNTCODE =", value, "accountcode");
            return this;
        }

        public Criteria andAccountcodeNotEqualTo(String value) {
            addCriterion("ACCOUNTCODE <>", value, "accountcode");
            return this;
        }

        public Criteria andAccountcodeGreaterThan(String value) {
            addCriterion("ACCOUNTCODE >", value, "accountcode");
            return this;
        }

        public Criteria andAccountcodeGreaterThanOrEqualTo(String value) {
            addCriterion("ACCOUNTCODE >=", value, "accountcode");
            return this;
        }

        public Criteria andAccountcodeLessThan(String value) {
            addCriterion("ACCOUNTCODE <", value, "accountcode");
            return this;
        }

        public Criteria andAccountcodeLessThanOrEqualTo(String value) {
            addCriterion("ACCOUNTCODE <=", value, "accountcode");
            return this;
        }

        public Criteria andAccountcodeLike(String value) {
            addCriterion("ACCOUNTCODE like", value, "accountcode");
            return this;
        }

        public Criteria andAccountcodeNotLike(String value) {
            addCriterion("ACCOUNTCODE not like", value, "accountcode");
            return this;
        }

        public Criteria andAccountcodeIn(List values) {
            addCriterion("ACCOUNTCODE in", values, "accountcode");
            return this;
        }

        public Criteria andAccountcodeNotIn(List values) {
            addCriterion("ACCOUNTCODE not in", values, "accountcode");
            return this;
        }

        public Criteria andAccountcodeBetween(String value1, String value2) {
            addCriterion("ACCOUNTCODE between", value1, value2, "accountcode");
            return this;
        }

        public Criteria andAccountcodeNotBetween(String value1, String value2) {
            addCriterion("ACCOUNTCODE not between", value1, value2, "accountcode");
            return this;
        }

        public Criteria andPasswordIsNull() {
            addCriterion("PASSWORD is null");
            return this;
        }

        public Criteria andPasswordIsNotNull() {
            addCriterion("PASSWORD is not null");
            return this;
        }

        public Criteria andPasswordEqualTo(String value) {
            addCriterion("PASSWORD =", value, "password");
            return this;
        }

        public Criteria andPasswordNotEqualTo(String value) {
            addCriterion("PASSWORD <>", value, "password");
            return this;
        }

        public Criteria andPasswordGreaterThan(String value) {
            addCriterion("PASSWORD >", value, "password");
            return this;
        }

        public Criteria andPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("PASSWORD >=", value, "password");
            return this;
        }

        public Criteria andPasswordLessThan(String value) {
            addCriterion("PASSWORD <", value, "password");
            return this;
        }

        public Criteria andPasswordLessThanOrEqualTo(String value) {
            addCriterion("PASSWORD <=", value, "password");
            return this;
        }

        public Criteria andPasswordLike(String value) {
            addCriterion("PASSWORD like", value, "password");
            return this;
        }

        public Criteria andPasswordNotLike(String value) {
            addCriterion("PASSWORD not like", value, "password");
            return this;
        }

        public Criteria andPasswordIn(List values) {
            addCriterion("PASSWORD in", values, "password");
            return this;
        }

        public Criteria andPasswordNotIn(List values) {
            addCriterion("PASSWORD not in", values, "password");
            return this;
        }

        public Criteria andPasswordBetween(String value1, String value2) {
            addCriterion("PASSWORD between", value1, value2, "password");
            return this;
        }

        public Criteria andPasswordNotBetween(String value1, String value2) {
            addCriterion("PASSWORD not between", value1, value2, "password");
            return this;
        }

        public Criteria andAccountstateIsNull() {
            addCriterion("ACCOUNTSTATE is null");
            return this;
        }

        public Criteria andAccountstateIsNotNull() {
            addCriterion("ACCOUNTSTATE is not null");
            return this;
        }

        public Criteria andAccountstateEqualTo(Integer value) {
            addCriterion("ACCOUNTSTATE =", value, "accountstate");
            return this;
        }

        public Criteria andAccountstateNotEqualTo(Integer value) {
            addCriterion("ACCOUNTSTATE <>", value, "accountstate");
            return this;
        }

        public Criteria andAccountstateGreaterThan(Integer value) {
            addCriterion("ACCOUNTSTATE >", value, "accountstate");
            return this;
        }

        public Criteria andAccountstateGreaterThanOrEqualTo(Integer value) {
            addCriterion("ACCOUNTSTATE >=", value, "accountstate");
            return this;
        }

        public Criteria andAccountstateLessThan(Integer value) {
            addCriterion("ACCOUNTSTATE <", value, "accountstate");
            return this;
        }

        public Criteria andAccountstateLessThanOrEqualTo(Integer value) {
            addCriterion("ACCOUNTSTATE <=", value, "accountstate");
            return this;
        }

        public Criteria andAccountstateIn(List values) {
            addCriterion("ACCOUNTSTATE in", values, "accountstate");
            return this;
        }

        public Criteria andAccountstateNotIn(List values) {
            addCriterion("ACCOUNTSTATE not in", values, "accountstate");
            return this;
        }

        public Criteria andAccountstateBetween(Integer value1, Integer value2) {
            addCriterion("ACCOUNTSTATE between", value1, value2, "accountstate");
            return this;
        }

        public Criteria andAccountstateNotBetween(Integer value1, Integer value2) {
            addCriterion("ACCOUNTSTATE not between", value1, value2, "accountstate");
            return this;
        }

        public Criteria andAccountmemoIsNull() {
            addCriterion("ACCOUNTMEMO is null");
            return this;
        }

        public Criteria andAccountmemoIsNotNull() {
            addCriterion("ACCOUNTMEMO is not null");
            return this;
        }

        public Criteria andAccountmemoEqualTo(String value) {
            addCriterion("ACCOUNTMEMO =", value, "accountmemo");
            return this;
        }

        public Criteria andAccountmemoNotEqualTo(String value) {
            addCriterion("ACCOUNTMEMO <>", value, "accountmemo");
            return this;
        }

        public Criteria andAccountmemoGreaterThan(String value) {
            addCriterion("ACCOUNTMEMO >", value, "accountmemo");
            return this;
        }

        public Criteria andAccountmemoGreaterThanOrEqualTo(String value) {
            addCriterion("ACCOUNTMEMO >=", value, "accountmemo");
            return this;
        }

        public Criteria andAccountmemoLessThan(String value) {
            addCriterion("ACCOUNTMEMO <", value, "accountmemo");
            return this;
        }

        public Criteria andAccountmemoLessThanOrEqualTo(String value) {
            addCriterion("ACCOUNTMEMO <=", value, "accountmemo");
            return this;
        }

        public Criteria andAccountmemoLike(String value) {
            addCriterion("ACCOUNTMEMO like", value, "accountmemo");
            return this;
        }

        public Criteria andAccountmemoNotLike(String value) {
            addCriterion("ACCOUNTMEMO not like", value, "accountmemo");
            return this;
        }

        public Criteria andAccountmemoIn(List values) {
            addCriterion("ACCOUNTMEMO in", values, "accountmemo");
            return this;
        }

        public Criteria andAccountmemoNotIn(List values) {
            addCriterion("ACCOUNTMEMO not in", values, "accountmemo");
            return this;
        }

        public Criteria andAccountmemoBetween(String value1, String value2) {
            addCriterion("ACCOUNTMEMO between", value1, value2, "accountmemo");
            return this;
        }

        public Criteria andAccountmemoNotBetween(String value1, String value2) {
            addCriterion("ACCOUNTMEMO not between", value1, value2, "accountmemo");
            return this;
        }
    }
}