package com.yapu.system.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SysErrorlogExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    public SysErrorlogExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    protected SysErrorlogExample(SysErrorlogExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table SYS_ERRORLOG
     *
     * @ibatorgenerated Fri Nov 12 20:49:06 GMT+08:00 2010
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andErrorlogidIsNull() {
            addCriterion("ERRORLOGID is null");
            return this;
        }

        public Criteria andErrorlogidIsNotNull() {
            addCriterion("ERRORLOGID is not null");
            return this;
        }

        public Criteria andErrorlogidEqualTo(String value) {
            addCriterion("ERRORLOGID =", value, "errorlogid");
            return this;
        }

        public Criteria andErrorlogidNotEqualTo(String value) {
            addCriterion("ERRORLOGID <>", value, "errorlogid");
            return this;
        }

        public Criteria andErrorlogidGreaterThan(String value) {
            addCriterion("ERRORLOGID >", value, "errorlogid");
            return this;
        }

        public Criteria andErrorlogidGreaterThanOrEqualTo(String value) {
            addCriterion("ERRORLOGID >=", value, "errorlogid");
            return this;
        }

        public Criteria andErrorlogidLessThan(String value) {
            addCriterion("ERRORLOGID <", value, "errorlogid");
            return this;
        }

        public Criteria andErrorlogidLessThanOrEqualTo(String value) {
            addCriterion("ERRORLOGID <=", value, "errorlogid");
            return this;
        }

        public Criteria andErrorlogidLike(String value) {
            addCriterion("ERRORLOGID like", value, "errorlogid");
            return this;
        }

        public Criteria andErrorlogidNotLike(String value) {
            addCriterion("ERRORLOGID not like", value, "errorlogid");
            return this;
        }

        public Criteria andErrorlogidIn(List values) {
            addCriterion("ERRORLOGID in", values, "errorlogid");
            return this;
        }

        public Criteria andErrorlogidNotIn(List values) {
            addCriterion("ERRORLOGID not in", values, "errorlogid");
            return this;
        }

        public Criteria andErrorlogidBetween(String value1, String value2) {
            addCriterion("ERRORLOGID between", value1, value2, "errorlogid");
            return this;
        }

        public Criteria andErrorlogidNotBetween(String value1, String value2) {
            addCriterion("ERRORLOGID not between", value1, value2, "errorlogid");
            return this;
        }

        public Criteria andFunnameIsNull() {
            addCriterion("FUNNAME is null");
            return this;
        }

        public Criteria andFunnameIsNotNull() {
            addCriterion("FUNNAME is not null");
            return this;
        }

        public Criteria andFunnameEqualTo(String value) {
            addCriterion("FUNNAME =", value, "funname");
            return this;
        }

        public Criteria andFunnameNotEqualTo(String value) {
            addCriterion("FUNNAME <>", value, "funname");
            return this;
        }

        public Criteria andFunnameGreaterThan(String value) {
            addCriterion("FUNNAME >", value, "funname");
            return this;
        }

        public Criteria andFunnameGreaterThanOrEqualTo(String value) {
            addCriterion("FUNNAME >=", value, "funname");
            return this;
        }

        public Criteria andFunnameLessThan(String value) {
            addCriterion("FUNNAME <", value, "funname");
            return this;
        }

        public Criteria andFunnameLessThanOrEqualTo(String value) {
            addCriterion("FUNNAME <=", value, "funname");
            return this;
        }

        public Criteria andFunnameLike(String value) {
            addCriterion("FUNNAME like", value, "funname");
            return this;
        }

        public Criteria andFunnameNotLike(String value) {
            addCriterion("FUNNAME not like", value, "funname");
            return this;
        }

        public Criteria andFunnameIn(List values) {
            addCriterion("FUNNAME in", values, "funname");
            return this;
        }

        public Criteria andFunnameNotIn(List values) {
            addCriterion("FUNNAME not in", values, "funname");
            return this;
        }

        public Criteria andFunnameBetween(String value1, String value2) {
            addCriterion("FUNNAME between", value1, value2, "funname");
            return this;
        }

        public Criteria andFunnameNotBetween(String value1, String value2) {
            addCriterion("FUNNAME not between", value1, value2, "funname");
            return this;
        }

        public Criteria andErrortimeIsNull() {
            addCriterion("ERRORTIME is null");
            return this;
        }

        public Criteria andErrortimeIsNotNull() {
            addCriterion("ERRORTIME is not null");
            return this;
        }

        public Criteria andErrortimeEqualTo(String value) {
            addCriterion("ERRORTIME =", value, "errortime");
            return this;
        }

        public Criteria andErrortimeNotEqualTo(String value) {
            addCriterion("ERRORTIME <>", value, "errortime");
            return this;
        }

        public Criteria andErrortimeGreaterThan(String value) {
            addCriterion("ERRORTIME >", value, "errortime");
            return this;
        }

        public Criteria andErrortimeGreaterThanOrEqualTo(String value) {
            addCriterion("ERRORTIME >=", value, "errortime");
            return this;
        }

        public Criteria andErrortimeLessThan(String value) {
            addCriterion("ERRORTIME <", value, "errortime");
            return this;
        }

        public Criteria andErrortimeLessThanOrEqualTo(String value) {
            addCriterion("ERRORTIME <=", value, "errortime");
            return this;
        }

        public Criteria andErrortimeLike(String value) {
            addCriterion("ERRORTIME like", value, "errortime");
            return this;
        }

        public Criteria andErrortimeNotLike(String value) {
            addCriterion("ERRORTIME not like", value, "errortime");
            return this;
        }

        public Criteria andErrortimeIn(List values) {
            addCriterion("ERRORTIME in", values, "errortime");
            return this;
        }

        public Criteria andErrortimeNotIn(List values) {
            addCriterion("ERRORTIME not in", values, "errortime");
            return this;
        }

        public Criteria andErrortimeBetween(String value1, String value2) {
            addCriterion("ERRORTIME between", value1, value2, "errortime");
            return this;
        }

        public Criteria andErrortimeNotBetween(String value1, String value2) {
            addCriterion("ERRORTIME not between", value1, value2, "errortime");
            return this;
        }

        public Criteria andErrordocIsNull() {
            addCriterion("ERRORDOC is null");
            return this;
        }

        public Criteria andErrordocIsNotNull() {
            addCriterion("ERRORDOC is not null");
            return this;
        }

        public Criteria andErrordocEqualTo(String value) {
            addCriterion("ERRORDOC =", value, "errordoc");
            return this;
        }

        public Criteria andErrordocNotEqualTo(String value) {
            addCriterion("ERRORDOC <>", value, "errordoc");
            return this;
        }

        public Criteria andErrordocGreaterThan(String value) {
            addCriterion("ERRORDOC >", value, "errordoc");
            return this;
        }

        public Criteria andErrordocGreaterThanOrEqualTo(String value) {
            addCriterion("ERRORDOC >=", value, "errordoc");
            return this;
        }

        public Criteria andErrordocLessThan(String value) {
            addCriterion("ERRORDOC <", value, "errordoc");
            return this;
        }

        public Criteria andErrordocLessThanOrEqualTo(String value) {
            addCriterion("ERRORDOC <=", value, "errordoc");
            return this;
        }

        public Criteria andErrordocLike(String value) {
            addCriterion("ERRORDOC like", value, "errordoc");
            return this;
        }

        public Criteria andErrordocNotLike(String value) {
            addCriterion("ERRORDOC not like", value, "errordoc");
            return this;
        }

        public Criteria andErrordocIn(List values) {
            addCriterion("ERRORDOC in", values, "errordoc");
            return this;
        }

        public Criteria andErrordocNotIn(List values) {
            addCriterion("ERRORDOC not in", values, "errordoc");
            return this;
        }

        public Criteria andErrordocBetween(String value1, String value2) {
            addCriterion("ERRORDOC between", value1, value2, "errordoc");
            return this;
        }

        public Criteria andErrordocNotBetween(String value1, String value2) {
            addCriterion("ERRORDOC not between", value1, value2, "errordoc");
            return this;
        }
    }
}