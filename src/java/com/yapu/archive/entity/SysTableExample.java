package com.yapu.archive.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SysTableExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    public SysTableExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    protected SysTableExample(SysTableExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table SYS_TABLE
     *
     * @ibatorgenerated Wed Nov 17 00:24:54 GMT+08:00 2010
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andTableidIsNull() {
            addCriterion("TABLEID is null");
            return this;
        }

        public Criteria andTableidIsNotNull() {
            addCriterion("TABLEID is not null");
            return this;
        }

        public Criteria andTableidEqualTo(String value) {
            addCriterion("TABLEID =", value, "tableid");
            return this;
        }

        public Criteria andTableidNotEqualTo(String value) {
            addCriterion("TABLEID <>", value, "tableid");
            return this;
        }

        public Criteria andTableidGreaterThan(String value) {
            addCriterion("TABLEID >", value, "tableid");
            return this;
        }

        public Criteria andTableidGreaterThanOrEqualTo(String value) {
            addCriterion("TABLEID >=", value, "tableid");
            return this;
        }

        public Criteria andTableidLessThan(String value) {
            addCriterion("TABLEID <", value, "tableid");
            return this;
        }

        public Criteria andTableidLessThanOrEqualTo(String value) {
            addCriterion("TABLEID <=", value, "tableid");
            return this;
        }

        public Criteria andTableidLike(String value) {
            addCriterion("TABLEID like", value, "tableid");
            return this;
        }

        public Criteria andTableidNotLike(String value) {
            addCriterion("TABLEID not like", value, "tableid");
            return this;
        }

        public Criteria andTableidIn(List values) {
            addCriterion("TABLEID in", values, "tableid");
            return this;
        }

        public Criteria andTableidNotIn(List values) {
            addCriterion("TABLEID not in", values, "tableid");
            return this;
        }

        public Criteria andTableidBetween(String value1, String value2) {
            addCriterion("TABLEID between", value1, value2, "tableid");
            return this;
        }

        public Criteria andTableidNotBetween(String value1, String value2) {
            addCriterion("TABLEID not between", value1, value2, "tableid");
            return this;
        }

        public Criteria andTablenameIsNull() {
            addCriterion("TABLENAME is null");
            return this;
        }

        public Criteria andTablenameIsNotNull() {
            addCriterion("TABLENAME is not null");
            return this;
        }

        public Criteria andTablenameEqualTo(String value) {
            addCriterion("TABLENAME =", value, "tablename");
            return this;
        }

        public Criteria andTablenameNotEqualTo(String value) {
            addCriterion("TABLENAME <>", value, "tablename");
            return this;
        }

        public Criteria andTablenameGreaterThan(String value) {
            addCriterion("TABLENAME >", value, "tablename");
            return this;
        }

        public Criteria andTablenameGreaterThanOrEqualTo(String value) {
            addCriterion("TABLENAME >=", value, "tablename");
            return this;
        }

        public Criteria andTablenameLessThan(String value) {
            addCriterion("TABLENAME <", value, "tablename");
            return this;
        }

        public Criteria andTablenameLessThanOrEqualTo(String value) {
            addCriterion("TABLENAME <=", value, "tablename");
            return this;
        }

        public Criteria andTablenameLike(String value) {
            addCriterion("TABLENAME like", value, "tablename");
            return this;
        }

        public Criteria andTablenameNotLike(String value) {
            addCriterion("TABLENAME not like", value, "tablename");
            return this;
        }

        public Criteria andTablenameIn(List values) {
            addCriterion("TABLENAME in", values, "tablename");
            return this;
        }

        public Criteria andTablenameNotIn(List values) {
            addCriterion("TABLENAME not in", values, "tablename");
            return this;
        }

        public Criteria andTablenameBetween(String value1, String value2) {
            addCriterion("TABLENAME between", value1, value2, "tablename");
            return this;
        }

        public Criteria andTablenameNotBetween(String value1, String value2) {
            addCriterion("TABLENAME not between", value1, value2, "tablename");
            return this;
        }

        public Criteria andTempletidIsNull() {
            addCriterion("TEMPLETID is null");
            return this;
        }

        public Criteria andTempletidIsNotNull() {
            addCriterion("TEMPLETID is not null");
            return this;
        }

        public Criteria andTempletidEqualTo(String value) {
            addCriterion("TEMPLETID =", value, "templetid");
            return this;
        }

        public Criteria andTempletidNotEqualTo(String value) {
            addCriterion("TEMPLETID <>", value, "templetid");
            return this;
        }

        public Criteria andTempletidGreaterThan(String value) {
            addCriterion("TEMPLETID >", value, "templetid");
            return this;
        }

        public Criteria andTempletidGreaterThanOrEqualTo(String value) {
            addCriterion("TEMPLETID >=", value, "templetid");
            return this;
        }

        public Criteria andTempletidLessThan(String value) {
            addCriterion("TEMPLETID <", value, "templetid");
            return this;
        }

        public Criteria andTempletidLessThanOrEqualTo(String value) {
            addCriterion("TEMPLETID <=", value, "templetid");
            return this;
        }

        public Criteria andTempletidLike(String value) {
            addCriterion("TEMPLETID like", value, "templetid");
            return this;
        }

        public Criteria andTempletidNotLike(String value) {
            addCriterion("TEMPLETID not like", value, "templetid");
            return this;
        }

        public Criteria andTempletidIn(List values) {
            addCriterion("TEMPLETID in", values, "templetid");
            return this;
        }

        public Criteria andTempletidNotIn(List values) {
            addCriterion("TEMPLETID not in", values, "templetid");
            return this;
        }

        public Criteria andTempletidBetween(String value1, String value2) {
            addCriterion("TEMPLETID between", value1, value2, "templetid");
            return this;
        }

        public Criteria andTempletidNotBetween(String value1, String value2) {
            addCriterion("TEMPLETID not between", value1, value2, "templetid");
            return this;
        }

        public Criteria andTabletypeIsNull() {
            addCriterion("TABLETYPE is null");
            return this;
        }

        public Criteria andTabletypeIsNotNull() {
            addCriterion("TABLETYPE is not null");
            return this;
        }

        public Criteria andTabletypeEqualTo(String value) {
            addCriterion("TABLETYPE =", value, "tabletype");
            return this;
        }

        public Criteria andTabletypeNotEqualTo(String value) {
            addCriterion("TABLETYPE <>", value, "tabletype");
            return this;
        }

        public Criteria andTabletypeGreaterThan(String value) {
            addCriterion("TABLETYPE >", value, "tabletype");
            return this;
        }

        public Criteria andTabletypeGreaterThanOrEqualTo(String value) {
            addCriterion("TABLETYPE >=", value, "tabletype");
            return this;
        }

        public Criteria andTabletypeLessThan(String value) {
            addCriterion("TABLETYPE <", value, "tabletype");
            return this;
        }

        public Criteria andTabletypeLessThanOrEqualTo(String value) {
            addCriterion("TABLETYPE <=", value, "tabletype");
            return this;
        }

        public Criteria andTabletypeLike(String value) {
            addCriterion("TABLETYPE like", value, "tabletype");
            return this;
        }

        public Criteria andTabletypeNotLike(String value) {
            addCriterion("TABLETYPE not like", value, "tabletype");
            return this;
        }

        public Criteria andTabletypeIn(List values) {
            addCriterion("TABLETYPE in", values, "tabletype");
            return this;
        }

        public Criteria andTabletypeNotIn(List values) {
            addCriterion("TABLETYPE not in", values, "tabletype");
            return this;
        }

        public Criteria andTabletypeBetween(String value1, String value2) {
            addCriterion("TABLETYPE between", value1, value2, "tabletype");
            return this;
        }

        public Criteria andTabletypeNotBetween(String value1, String value2) {
            addCriterion("TABLETYPE not between", value1, value2, "tabletype");
            return this;
        }
    }
}