package com.yapu.archive.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ArCollectionExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    public ArCollectionExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    protected ArCollectionExample(ArCollectionExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table ar_collection
     *
     * @ibatorgenerated Thu Nov 18 14:31:55 GMT+08:00 2010
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCollectionidIsNull() {
            addCriterion("COLLECTIONID is null");
            return this;
        }

        public Criteria andCollectionidIsNotNull() {
            addCriterion("COLLECTIONID is not null");
            return this;
        }

        public Criteria andCollectionidEqualTo(String value) {
            addCriterion("COLLECTIONID =", value, "collectionid");
            return this;
        }

        public Criteria andCollectionidNotEqualTo(String value) {
            addCriterion("COLLECTIONID <>", value, "collectionid");
            return this;
        }

        public Criteria andCollectionidGreaterThan(String value) {
            addCriterion("COLLECTIONID >", value, "collectionid");
            return this;
        }

        public Criteria andCollectionidGreaterThanOrEqualTo(String value) {
            addCriterion("COLLECTIONID >=", value, "collectionid");
            return this;
        }

        public Criteria andCollectionidLessThan(String value) {
            addCriterion("COLLECTIONID <", value, "collectionid");
            return this;
        }

        public Criteria andCollectionidLessThanOrEqualTo(String value) {
            addCriterion("COLLECTIONID <=", value, "collectionid");
            return this;
        }

        public Criteria andCollectionidLike(String value) {
            addCriterion("COLLECTIONID like", value, "collectionid");
            return this;
        }

        public Criteria andCollectionidNotLike(String value) {
            addCriterion("COLLECTIONID not like", value, "collectionid");
            return this;
        }

        public Criteria andCollectionidIn(List values) {
            addCriterion("COLLECTIONID in", values, "collectionid");
            return this;
        }

        public Criteria andCollectionidNotIn(List values) {
            addCriterion("COLLECTIONID not in", values, "collectionid");
            return this;
        }

        public Criteria andCollectionidBetween(String value1, String value2) {
            addCriterion("COLLECTIONID between", value1, value2, "collectionid");
            return this;
        }

        public Criteria andCollectionidNotBetween(String value1, String value2) {
            addCriterion("COLLECTIONID not between", value1, value2, "collectionid");
            return this;
        }

        public Criteria andFileidIsNull() {
            addCriterion("FILEID is null");
            return this;
        }

        public Criteria andFileidIsNotNull() {
            addCriterion("FILEID is not null");
            return this;
        }

        public Criteria andFileidEqualTo(String value) {
            addCriterion("FILEID =", value, "fileid");
            return this;
        }

        public Criteria andFileidNotEqualTo(String value) {
            addCriterion("FILEID <>", value, "fileid");
            return this;
        }

        public Criteria andFileidGreaterThan(String value) {
            addCriterion("FILEID >", value, "fileid");
            return this;
        }

        public Criteria andFileidGreaterThanOrEqualTo(String value) {
            addCriterion("FILEID >=", value, "fileid");
            return this;
        }

        public Criteria andFileidLessThan(String value) {
            addCriterion("FILEID <", value, "fileid");
            return this;
        }

        public Criteria andFileidLessThanOrEqualTo(String value) {
            addCriterion("FILEID <=", value, "fileid");
            return this;
        }

        public Criteria andFileidLike(String value) {
            addCriterion("FILEID like", value, "fileid");
            return this;
        }

        public Criteria andFileidNotLike(String value) {
            addCriterion("FILEID not like", value, "fileid");
            return this;
        }

        public Criteria andFileidIn(List values) {
            addCriterion("FILEID in", values, "fileid");
            return this;
        }

        public Criteria andFileidNotIn(List values) {
            addCriterion("FILEID not in", values, "fileid");
            return this;
        }

        public Criteria andFileidBetween(String value1, String value2) {
            addCriterion("FILEID between", value1, value2, "fileid");
            return this;
        }

        public Criteria andFileidNotBetween(String value1, String value2) {
            addCriterion("FILEID not between", value1, value2, "fileid");
            return this;
        }

        public Criteria andTableidIsNull() {
            addCriterion("TABLEID is null");
            return this;
        }

        public Criteria andTableidIsNotNull() {
            addCriterion("TABLEID is not null");
            return this;
        }

        public Criteria andTableidEqualTo(String value) {
            addCriterion("TABLEID =", value, "tableid");
            return this;
        }

        public Criteria andTableidNotEqualTo(String value) {
            addCriterion("TABLEID <>", value, "tableid");
            return this;
        }

        public Criteria andTableidGreaterThan(String value) {
            addCriterion("TABLEID >", value, "tableid");
            return this;
        }

        public Criteria andTableidGreaterThanOrEqualTo(String value) {
            addCriterion("TABLEID >=", value, "tableid");
            return this;
        }

        public Criteria andTableidLessThan(String value) {
            addCriterion("TABLEID <", value, "tableid");
            return this;
        }

        public Criteria andTableidLessThanOrEqualTo(String value) {
            addCriterion("TABLEID <=", value, "tableid");
            return this;
        }

        public Criteria andTableidLike(String value) {
            addCriterion("TABLEID like", value, "tableid");
            return this;
        }

        public Criteria andTableidNotLike(String value) {
            addCriterion("TABLEID not like", value, "tableid");
            return this;
        }

        public Criteria andTableidIn(List values) {
            addCriterion("TABLEID in", values, "tableid");
            return this;
        }

        public Criteria andTableidNotIn(List values) {
            addCriterion("TABLEID not in", values, "tableid");
            return this;
        }

        public Criteria andTableidBetween(String value1, String value2) {
            addCriterion("TABLEID between", value1, value2, "tableid");
            return this;
        }

        public Criteria andTableidNotBetween(String value1, String value2) {
            addCriterion("TABLEID not between", value1, value2, "tableid");
            return this;
        }
    }
}