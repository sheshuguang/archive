package com.yapu.archive.dao.impl;

import java.util.HashMap;
import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.yapu.archive.dao.itf.ArReleaseDAO;
import com.yapu.archive.entity.ArRelease;
import com.yapu.archive.entity.ArReleaseExample;

public class ArReleaseDAOImpl extends SqlMapClientDaoSupport implements ArReleaseDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public ArReleaseDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public int countByExample(ArReleaseExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("AR_RELEASE.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public int deleteByExample(ArReleaseExample example) {
        int rows = getSqlMapClientTemplate().delete("AR_RELEASE.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public int deleteByPrimaryKey(String releaseid) {
        ArRelease key = new ArRelease();
        key.setReleaseid(releaseid);
        int rows = getSqlMapClientTemplate().delete("AR_RELEASE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public void insert(ArRelease record) {
        getSqlMapClientTemplate().insert("AR_RELEASE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public void insertSelective(ArRelease record) {
        getSqlMapClientTemplate().insert("AR_RELEASE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public List selectByExample(ArReleaseExample example) {
        List list = getSqlMapClientTemplate().queryForList("AR_RELEASE.ibatorgenerated_selectByExample", example);
        return list;
    }
    /*
     * (non-Javadoc)
     * @see com.yapu.system.dao.itf.ArReleaseDAO#selectByMapPage(java.util.HashMap)
     */
    public List selectByMapPage(HashMap map) {
    	List list = getSqlMapClientTemplate().queryForList("AR_RELEASE.ibatorgenerated_selectByExamplePage", map);
		return list;
	}

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public ArRelease selectByPrimaryKey(String releaseid) {
        ArRelease key = new ArRelease();
        key.setReleaseid(releaseid);
        ArRelease record = (ArRelease) getSqlMapClientTemplate().queryForObject("AR_RELEASE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public int updateByExampleSelective(ArRelease record, ArReleaseExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("AR_RELEASE.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public int updateByExample(ArRelease record, ArReleaseExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("AR_RELEASE.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public int updateByPrimaryKeySelective(ArRelease record) {
        int rows = getSqlMapClientTemplate().update("AR_RELEASE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    public int updateByPrimaryKey(ArRelease record) {
        int rows = getSqlMapClientTemplate().update("AR_RELEASE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table AR_RELEASE
     *
     * @ibatorgenerated Sat Nov 13 12:15:56 GMT+08:00 2010
     */
    private static class UpdateByExampleParms extends ArReleaseExample {
        private Object record;

        public UpdateByExampleParms(Object record, ArReleaseExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}