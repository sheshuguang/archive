/*C2*/SET SCHEMA PUBLIC
\u000aDROP TABLE IF EXISTS AR_COLLECTION
create table AR_COLLECTION (\u000a   COLLECTIONID         varchar(40)          not null primary key,\u000a   FILEID               varchar(40)          null,\u000a   TABLEID              varchar(40)          null\u000a)\u000a\u000a
create table AR_RELEASE (\u000a   RELEASEID            varchar(40)          not null primary key,\u000a   FILEID               varchar(40)          null,\u000a   RELEASEMAN           varchar(50)          null,\u000a   RELEASEDATE          varchar(50)          null,\u000a   TABLEID              varchar(40)          null\u000a)\u000a\u000a
create table SYS_USER (\u000a   USERID               varchar(40)          not null primary key,\u000a   USERNAME             varchar(30)          null,\u000a   SEX                  varchar(10)          null,\u000a   PHONE                varchar(30)          null\u000a)\u000a\u000a
create table SYS_ACCOUNT (\u000a   ACCOUNTID            varchar(40)          not null primary key,\u000a   USERID               varchar(40)          null,\u000a   ACCOUNTCODE          varchar(50)          null,\u000a   PASSWORD             varchar(100)         null,\u000a   ACCOUNTSTATE         int                  null,\u000a   ACCOUNTMEMO          varchar(200)         null,\u000a   constraint FK_ACCOUNT_USER foreign key(USERID) references SYS_USER(USERID)\u000a)\u000a\u000a
create table SYS_ORG (\u000a   ORGID                varchar(40)          not null primary key,\u000a   PARENTID             varchar(40)          null,\u000a   ORGNAME              varchar(100)         null,\u000a   ORGORDER             int                  null\u000a)\u000a\u000a
create table SYS_ROLE (\u000a   ROLEID               varchar(40)          not null primary key,\u000a   ROLENAME             varchar(50)          null,\u000a   ROLEMEMO             varchar(100)         null\u000a)\u000a\u000a
create table SYS_TREE (\u000a   TREEID               varchar(40)          not null primary key,\u000a   PARENTID             varchar(40)          null,\u000a   TREENAME             varchar(50)          null,\u000a   TREETYPE             varchar(30)          null,\u000a   TREENODE             varchar(100)         null\u000a)\u000a\u000a
create table SYS_ACCOUNT_ORG (\u000a   ACCOUNT_ORG_ID       varchar(40)          not null primary key,\u000a   ORGID                varchar(40)          null,\u000a   ACCOUNTID            varchar(40)          null,\u000a   constraint FK_ACCOUNT_ORG_ORG foreign key(ORGID) references SYS_ORG(ORGID),\u000a   constraint FK_ACCOUNT_ORG_ACCOUNT foreign key(ACCOUNTID) references SYS_ACCOUNT(ACCOUNTID)\u000a)\u000a\u000a
create table SYS_ACCOUNT_ROLE (\u000a   ACCOUNT_ROLE_ID      varchar(40)          not null primary key,\u000a   ROLEID               varchar(40)          null,\u000a   ACCOUNTID            varchar(40)          null,\u000a   constraint FK_ACCOUNT_ROLE_ROLE foreign key(ROLEID) references SYS_ROLE(ROLEID),\u000a   constraint FK_ACCOUNT_ROLE_ACCOUNT foreign key(ACCOUNTID) references SYS_ACCOUNT(ACCOUNTID)\u000a)\u000a\u000a
create table SYS_ACCOUNT_TREE (\u000a   ACCOUNT_TREE_ID      varchar(40)          not null primary key,\u000a   TREEID               varchar(40)          null,\u000a   ACCOUNTID            varchar(40)          null,\u000a   FILESCAN             int                  null,\u000a   FILEDOWN             int                  null,\u000a   FILEPRINT            int                  null,\u000a   constraint FK_ACCOUNT_TREE_TREE foreign key(TREEID) references SYS_TREE(TREEID),\u000a   constraint FK_ACCOUNT_TREE_ACCOUNT foreign key(ACCOUNTID) references SYS_ACCOUNT(ACCOUNTID)\u000a)\u000a\u000a
create table SYS_TABLE (\u000a   TABLEID              varchar(40)          not null primary key,\u000a   TABLENAME            varchar(60)          null,\u000a   TEMPLETID            varchar(40)          null,\u000a   TABLELABEL           varchar(60)          null,\u000a   TABLETYPE            varchar(30)          null\u000a)\u000a\u000a
create table SYS_TEMPLET (\u000a   TEMPLETID            varchar(40)          not null primary key,\u000a   TEMPLETNAME          varchar(50)          null,\u000a   TEMPLETTYPE          varchar(30)          null\u000a)\u000a\u000a
create table SYS_TEMPLETFIELD (\u000a   TEMPLETFIELDID       varchar(40)          not null primary key,\u000a   ENGLISHNAME          varchar(50)          null,\u000a   CHINESENAME          varchar(50)          null,\u000a   FIELDSIZE            int                  null,\u000a   FIELDTYPE            varchar(50)          null,\u000a   ISPK                 int                  null,\u000a   DEFAULTVALUE         varchar(50)          null,\u000a   ISREQUIRE            int                  null,\u000a   ISUNIQUE             int                  null,\u000a   ISSEARCH             int                  null,\u000a   ISGRIDSHOW           int                  null,\u000a   SORT                 int                  null,\u000a   ISEDIT               int                  null,\u000a   ISCODE               int                  null,\u000a   ISSYSTEM             int                  null,\u000a   FIELDCSS             varchar(200)         null,\u000a   TABLEID              varchar(40)          null\u000a)\u000a\u000a
create table SYS_TEMPLETTYPECODE (\u000a   TYPENAME             varchar(30)          null,\u000a   TYPEMEMO             varchar(100)         null\u000a)\u000a\u000a
create table SYS_TREETYPECODE (\u000a   TYPENAME             varchar(30)          null,\u000a   TYPEMEMO             varchar(100)         null\u000a)\u000a\u000a
create table SYS_CODE (\u000a   CODEID               varchar(40)          not null primary key,\u000a   TEMPLETFIELDID       varchar(40)          null,\u000a   COLUMNNAME           varchar(20)          null,\u000a   COLUMNDATA           varchar(30)          null,\u000a   CODEORDER            int                  null,\u000a   constraint FK_CODE_TEMPLETFIELD foreign key(TEMPLETFIELDID) references SYS_TEMPLETFIELD(TEMPLETFIELDID)\u000a)\u000a\u000a
create table SYS_CONFIG (\u000a   CONFIGID             varchar(40)          not null primary key,\u000a   CONFIGKEY            varchar(30)          null,\u000a   CONFIGVALUE          varchar(100)         null,\u000a   CONFIGMEMO           varchar(100)         null\u000a)\u000a\u000a
create table SYS_DOCSERVER (\u000a   DOCSERVERID          varchar(40)          not null primary key,\u000a   SERVERIP             varchar(50)          null,\u000a   SERVERPATH           varchar(200)         null,\u000a   FTPUSER              varchar(50)          null,\u000a   FTPPASSWORD          varchar(50)          null,\u000a   SERVERNAME           varchar(50)          null,\u000a   SERVERTYPE           varchar(50)          null,\u000a   SERVERSTATE          int                  null,\u000a   SERVERMEMO           varchar(200)         null\u000a)\u000a\u000a
create table SYS_DOC (\u000a   DOCID                varchar(40)          not null primary key,\u000a   DOCSERVERID          varchar(40)          null,\u000a   DOCOLDNAME           varchar(300)         null,\u000a   DOCNEWNAME           varchar(255)         null,\u000a   DOCTYPE              varchar(20)          null,\u000a   DOCLENGTH            varchar(10)          null,\u000a   DOCPATH              varchar(300)         null,\u000a   CREATER              varchar(20)          null,\u000a   CREATETIME           varchar(30)          null,\u000a   FILEID               varchar(40)          null,\u000a   TABLEID              varchar(40)          null,\u000a   constraint FK_DOC_DOCSERVER foreign key(DOCSERVERID) references SYS_DOCSERVER(DOCSERVERID)\u000a)\u000a\u000a
create table SYS_ERRORLOG (\u000a   ERRORLOGID           varchar(40)          not null primary key,\u000a   FUNNAME              varchar(50)          null,\u000a   ERRORTIME            varchar(100)         null,\u000a   ERRORDOC             varchar(500)         null\u000a)\u000a\u000a
create table SYS_FUNCTION (\u000a   FUNCTIONID           varchar(40)          not null primary key,\u000a   FUNCHINESENAME       varchar(50)          null,\u000a   FUNENGLISHNAME       varchar(50)          null,\u000a   FUNPATH              varchar(200)         null,\u000a   FUNORDER             int                  null,\u000a   FUNSYSTEM            int                  null,\u000a   FUNPARENT            varchar(40)          null\u000a)\u000a\u000a
create table SYS_LOGINLOG (\u000a   LOGINLOGID           varchar(40)          not null primary key,\u000a   ACCOUNTCODE          varchar(50)          null,\u000a   USERNAME             varchar(30)          null,\u000a   LOGINTIME            varchar(100)         null,\u000a   OUTTIME              varchar(100)         null,\u000a   LOGINIP              varchar(80)          null\u000a)\u000a\u000a
create table SYS_OPERATELOG (\u000a   OPERATELOGID         varchar(40)          not null primary key,\u000a   ACCOUNTCODE          varchar(50)          null,\u000a   USERNAME             varchar(30)          null,\u000a   FUNNAME              varchar(50)          null,\u000a   OPERATETIME          varchar(100)         null,\u000a   LOGDOC               varchar(500)         null\u000a)\u000a\u000a
create table SYS_ORG_ROLE (\u000a   ORG_ROLE_ID          varchar(40)          not null primary key,\u000a   ORGID                varchar(40)          null,\u000a   ROLEID               varchar(40)          null,\u000a   constraint FK_ORG_ROLE_ORG foreign key(ORGID) references SYS_ORG(ORGID),\u000a   constraint FK_ORG_ROLE_ROLE foreign key(ROLEID) references SYS_ROLE(ROLEID)\u000a)\u000a\u000a
create table SYS_ORG_TREE (\u000a   ORG_TREE_ID          varchar(40)          not null primary key,\u000a   ORGID                varchar(40)          null,\u000a   TREEID               varchar(40)          null,\u000a   FILESCAN             int                  null,\u000a   FILEDOWN             int                  null,\u000a   FILEPRINT            int                  null,\u000a   constraint FK_ORG_TREE_ORG foreign key(ORGID) references SYS_ORG(ORGID),\u000a   constraint FK_ORG_TREE_TREE foreign key(TREEID) references SYS_TREE(TREEID)\u000a)\u000a\u000a
create table SYS_ROLE_FUNCTION (\u000a   ROLE_FUNCTION_ID     varchar(40)          not null primary key,\u000a   ROLEID               varchar(40)          null,\u000a   FUNCTIONID           varchar(40)          null,\u000a   constraint FK_ROLE_FUNCTION_ROLE foreign key(ROLEID) references SYS_ROLE(ROLEID),\u000a   constraint FK_ROLE_FUNCTION_FUNCTION foreign key(FUNCTIONID) references SYS_FUNCTION(FUNCTIONID)\u000a)\u000a\u000a
create table SYS_TABLETYPECODE (\u000a   TYPENAME             varchar(30)          null,\u000a   TYPEMEMO             varchar(100)         null\u000a)\u000a\u000a
create table SYS_TREE_TEMPLET (\u000a   TREE_TEMPLET_ID      varchar(40)          not null primary key,\u000a   TREEID               varchar(40)          null,\u000a   TEMPLETID            varchar(40)          null,\u000a   constraint FK_TREE_TEMPLET_TREE foreign key(TREEID) references SYS_TREE(TREEID),\u000a   constraint FK_TREE_TEMPLET_TEMPLET foreign key(TEMPLETID) references SYS_TEMPLET(TEMPLETID)\u000a)
